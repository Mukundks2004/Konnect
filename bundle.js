/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./styles/styles.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./styles/styles.css ***!
  \*****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html, body {\n  height: 100%;\n  width: 100%;\n  font-family: Arial, sans-serif;\n  background-color: #CCCCCC;\n  justify-content: center;\n  display: flex;\n}\n\n#masterContainer {\n  display: flex;\n  padding: 100px 20px 20px 20px;\n  width: 95%;\n  height: 670px;\n}\n\n.box {\n  border-radius: 10px;\n  border: 2px solid #000000;\n  background-color: #999999;\n  margin: 15px;\n  overflow: hidden;\n}\n\n#config {\n  flex: 1;\n}\n\n#sketchContainer {\n  width: 550px;\n  /* flex: 1; */\n}\n\n#textEditor {\n  flex: 1;\n}\n\n.tab button {\n  background-color: #DDDDDD;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 14px 10px;\n  transition: 0.3s;\n  font-size: 17px;\n}\n\n.tab button:hover {\n  background-color: #BBBBBB;\n}\n\n.tab button.active {\n  background-color: #999999;\n}\n\n.tabcontent {\n  display: none;\n  padding: 10px;\n}\n\n.navbar {\n  background-color: #333;\n  padding: 5px 20px;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 1000;\n}\n\n.navbar-list {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  height: 100%;\n}\n\n.navbar-item {\n  margin: 0px 15px;\n}\n\n.navbar-link {\n  color: white;\n  text-decoration: none;\n  font-size: 18px;\n  padding: 8px 15px;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n  align-items: center;\n}\n\n.navbar-link:hover {\n  background-color: #575757;\n  color: #fff;\n}\n\n.button-6 {\n  align-items: center;\n  background-color: #FFFFFF;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: .25rem;\n  box-shadow: rgba(0, 0, 0, 0.02) 0 1px 3px 0;\n  box-sizing: border-box;\n  color: rgba(0, 0, 0, 0.85);\n  cursor: pointer;\n  display: inline-flex;\n  font-family: system-ui,-apple-system,system-ui,\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  justify-content: center;\n  line-height: 1;\n  margin: 0;\n  min-height: 2rem;\n  padding: 5px;\n  position: relative;\n  text-decoration: none;\n  transition: all 250ms;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: baseline;\n  width: auto;\n}\n\n.button-6:hover,\n.button-6:focus {\n  border-color: rgba(0, 0, 0, 0.15);\n  box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\n  color: rgba(0, 0, 0, 0.65);\n}\n\n.button-6:hover {\n  transform: translateY(-1px);\n}\n\n.button-6:active {\n  background-color: #F0F0F1;\n  border-color: rgba(0, 0, 0, 0.15);\n  box-shadow: rgba(0, 0, 0, 0.06) 0 2px 4px;\n  color: rgba(0, 0, 0, 0.65);\n  transform: translateY(0);\n}\n\n.spaceElements {\n  margin: 10px 10px 10px 0px;\n}\n\n.styled-table {\n  margin: auto;\n  font-size: 14px;\n  border-radius: 10px;\n  overflow: hidden;\n  border-collapse: collapse;\n  font-family: sans-serif;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n}\n\n.styled-table thead tr {\n  background-color: #6b6b6b;\n  color: #ffffff;\n  text-align: left;\n}\n\n.styled-table th,\n.styled-table td {\n    padding: 5px 15px;\n}\n\n.styled-table tbody tr {\n  border-bottom: 1px solid #dddddd;\n}\n\n.styled-table tbody tr:nth-of-type(even) {\n  background-color: #f3f3f3;\n}\n\n.styled-table tbody tr:nth-of-type(odd) {\n  background-color: #c4c4c4;\n}\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack:///./styles/styles.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./styles/styles.css":
/*!***************************!*\
  !*** ./styles/styles.css ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./styles.css */ \"./node_modules/css-loader/dist/cjs.js!./styles/styles.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack:///./styles/styles.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/graph.ts":
/*!**********************!*\
  !*** ./src/graph.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graph: () => (/* binding */ Graph)\n/* harmony export */ });\nclass Graph {\n    constructor() {\n        // private adjacencyList: Map<GraphNode, Set<[GraphNode, number]>> = new Map();\n        this.adjacencyList = new Map();\n    }\n    toString() {\n        let finalString = \"\";\n        this.getNodes().forEach(node => {\n            finalString += node.id + \"\\n\";\n            this.getNeighbors(node).forEach(element => {\n                finalString += node.id + \" \" + element.id + \"\\n\";\n            });\n        });\n        return finalString;\n    }\n    addNode(node) {\n        if (!this.adjacencyList.has(node)) {\n            this.adjacencyList.set(node, new Map());\n        }\n    }\n    removeNode(node) {\n        var _a, _b, _c;\n        if (this.adjacencyList.has(node)) {\n            this.adjacencyList.delete(node);\n            for (let key of this.adjacencyList.keys()) {\n                for (let neighbor of Array.from((_b = (_a = this.adjacencyList.get(key)) === null || _a === void 0 ? void 0 : _a.keys()) !== null && _b !== void 0 ? _b : [])) {\n                    if (neighbor === node) {\n                        (_c = this.adjacencyList.get(key)) === null || _c === void 0 ? void 0 : _c.delete(neighbor);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    addEdge(node1, node2, weight) {\n        var _a, _b, _c;\n        if (node1 === node2) {\n            return;\n        }\n        if (!((_a = this.adjacencyList.get(node1)) === null || _a === void 0 ? void 0 : _a.has(node2))) {\n            this.addNode(node1);\n            this.addNode(node2);\n            (_b = this.adjacencyList.get(node1)) === null || _b === void 0 ? void 0 : _b.set(node2, weight);\n            (_c = this.adjacencyList.get(node2)) === null || _c === void 0 ? void 0 : _c.set(node1, weight);\n        }\n    }\n    removeEdge(node1, node2) {\n        if (this.adjacencyList.has(node1)) {\n            const neighborsFrom = this.adjacencyList.get(node1);\n            for (let neighbor of neighborsFrom.keys()) {\n                if (neighbor === node2) {\n                    neighborsFrom.delete(neighbor);\n                    break;\n                }\n            }\n        }\n        if (this.adjacencyList.has(node2)) {\n            const neighborsFrom = this.adjacencyList.get(node2);\n            for (let neighbor of neighborsFrom.keys()) {\n                if (neighbor === node1) {\n                    neighborsFrom.delete(neighbor);\n                    break;\n                }\n            }\n        }\n    }\n    hasEdge(node1, node2) {\n        const edges = this.adjacencyList.get(node1);\n        if (edges) {\n            for (let [neighbor, _] of edges) {\n                if (neighbor === node2) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    getNeighbors(node) {\n        var _a;\n        return Array.from(((_a = this.adjacencyList.get(node)) === null || _a === void 0 ? void 0 : _a.keys()) || []);\n    }\n    getNodes() {\n        return Array.from(this.adjacencyList.keys());\n    }\n    getNumberOfNodes() {\n        return this.adjacencyList.size;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/graph.ts?");

/***/ }),

/***/ "./src/graphNode.ts":
/*!**************************!*\
  !*** ./src/graphNode.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphNode: () => (/* binding */ GraphNode)\n/* harmony export */ });\n// Node class\nclass GraphNode {\n    constructor(pos, size) {\n        this.pos = pos;\n        this.force = new p5.Vector(0, 0);\n        this.mass = (2 * Math.PI * size) / 1.5;\n        this.id = GraphNode.currentId;\n        GraphNode.currentId++;\n    }\n    // Change vel by acc, then pos by vel\n    // This means we only have to update the acc and the rest follows\n    update() {\n        const forceCopy = this.force.copy();\n        const vel = forceCopy.div(this.mass);\n        this.pos.add(vel);\n    }\n    // A node is just a circle\n    draw(s) {\n        s.ellipse(this.pos.x, this.pos.y, this.mass, this.mass);\n    }\n}\nGraphNode.currentId = 0;\n\n\n//# sourceURL=webpack:///./src/graphNode.ts?");

/***/ }),

/***/ "./src/graphUtilities.ts":
/*!*******************************!*\
  !*** ./src/graphUtilities.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   edgeCount: () => (/* binding */ edgeCount),\n/* harmony export */   findShortestCycle: () => (/* binding */ findShortestCycle),\n/* harmony export */   isGraphComplete: () => (/* binding */ isGraphComplete),\n/* harmony export */   isGraphConnected: () => (/* binding */ isGraphConnected),\n/* harmony export */   nodeCount: () => (/* binding */ nodeCount)\n/* harmony export */ });\nfunction isGraphConnected(graph) {\n    if (graph.getNumberOfNodes() === 1) {\n        return true;\n    }\n    let result = true;\n    graph.getNodes().forEach(node => {\n        if (graph.getNeighbors(node).length == 0) {\n            result = false;\n            return;\n        }\n    });\n    return result;\n}\nfunction isGraphComplete(graph) {\n    const size = graph.getNumberOfNodes();\n    let result = true;\n    graph.getNodes().forEach(node => {\n        if (graph.getNeighbors(node).length !== size - 1) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction nodeCount(graph) {\n    return graph.getNumberOfNodes();\n}\nfunction edgeCount(graph) {\n    let count = 0;\n    graph.getNodes().forEach((node) => {\n        count += graph.getNeighbors(node).length;\n    });\n    return count / 2;\n}\nfunction findShortestCycle(graph) {\n    let minCycleLength = Infinity;\n    const bfs = (start) => {\n        const queue = [[start, null, 0]];\n        const visited = new Map();\n        const distance = new Map();\n        const parent = new Map();\n        visited.set(start, true);\n        distance.set(start, 0);\n        parent.set(start, null);\n        while (queue.length > 0) {\n            const [currentNode, currentParent, currentDist] = queue.shift();\n            for (let neighbor of graph.getNeighbors(currentNode)) {\n                if (!visited.has(neighbor)) {\n                    visited.set(neighbor, true);\n                    distance.set(neighbor, currentDist + 1);\n                    parent.set(neighbor, currentNode);\n                    queue.push([neighbor, currentNode, currentDist + 1]);\n                }\n                else if (neighbor !== currentParent) {\n                    const cycleLength = currentDist + 1 + distance.get(neighbor);\n                    minCycleLength = Math.min(minCycleLength, cycleLength);\n                }\n            }\n        }\n        return minCycleLength;\n    };\n    for (let node of graph.getNodes()) {\n        minCycleLength = bfs(node);\n    }\n    return minCycleLength === Infinity ? -1 : minCycleLength;\n}\n\n\n//# sourceURL=webpack:///./src/graphUtilities.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_styles_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/styles.css */ \"./styles/styles.css\");\n/* harmony import */ var _sketch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sketch */ \"./src/sketch.ts\");\n\n\nconst editor = ace.edit(\"textEditor\");\neditor.setReadOnly(true);\nfunction downloadText() {\n    var content = editor.getValue();\n    var blob = new Blob([content], { type: \"text/plain\" });\n    var link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"myGraphData_\" + Date.now() + \".txt\";\n    link.click();\n    URL.revokeObjectURL(link.href);\n}\nconst pathElement = document.getElementById('iconPath');\nconst inputElement = document.getElementById('colourSelector');\nif (inputElement !== null) {\n    inputElement.addEventListener('input', function () {\n        const event = new CustomEvent('colourChanged', { detail: inputElement.value });\n        if (pathElement !== null) {\n            pathElement.setAttribute('fill', inputElement.value);\n        }\n        window.dispatchEvent(event);\n    });\n}\nwindow.addEventListener('textUpdated', function (event) {\n    const customEvent = event;\n    editor.setValue(customEvent.detail);\n    editor.getSession().selection.clearSelection();\n});\nwindow.addEventListener('sendGraphAttributes', function (event) {\n    const customEvent = event;\n    const cyclicDiv = document.getElementById(\"cyclicValue\");\n    const connectedDiv = document.getElementById(\"connectedValue\");\n    const completeDiv = document.getElementById(\"completeValue\");\n    const planarDiv = document.getElementById(\"planarValue\");\n    const treeDiv = document.getElementById(\"treeValue\");\n    const forestDiv = document.getElementById(\"forestValue\");\n    const nodeCountDiv = document.getElementById(\"totalNodesValue\");\n    const edgeCountDiv = document.getElementById(\"totalEdgesValue\");\n    if (cyclicDiv) {\n        const result = customEvent.detail.get(\"ShortestCycle\");\n        if (result === \"-1\") {\n            cyclicDiv.innerHTML = \"No\";\n        }\n        else if (result) {\n            cyclicDiv.innerHTML = result;\n        }\n    }\n    if (connectedDiv) {\n        const result = customEvent.detail.get(\"IsConnected\");\n        if (result) {\n            connectedDiv.innerHTML = result === \"true\" ? \"Yes\" : \"No\";\n        }\n    }\n    if (completeDiv) {\n        const result = customEvent.detail.get(\"IsComplete\");\n        if (result) {\n            completeDiv.innerHTML = result === \"true\" ? \"Yes\" : \"No\";\n        }\n    }\n    if (nodeCountDiv) {\n        const result = customEvent.detail.get(\"NodeCount\");\n        if (result) {\n            nodeCountDiv.innerHTML = result;\n        }\n    }\n    if (edgeCountDiv) {\n        const result = customEvent.detail.get(\"EdgeCount\");\n        if (result) {\n            edgeCountDiv.innerHTML = result;\n        }\n    }\n});\nconst saveImageButton = document.getElementById('saveImageButton');\nif (saveImageButton) {\n    saveImageButton.addEventListener('click', () => {\n        window.dispatchEvent(new CustomEvent('saveImage'));\n    });\n}\nconst downloadTextButton = document.getElementById('saveTextButton');\nconst clearButton = document.getElementById('clearButton');\nconst randomButton = document.getElementById('randomButton');\nif (downloadTextButton) {\n    downloadTextButton.addEventListener('click', () => {\n        downloadText();\n    });\n}\nif (clearButton) {\n    clearButton.addEventListener('click', () => {\n        window.dispatchEvent(new CustomEvent('clearGraph'));\n        ;\n    });\n}\nif (randomButton) {\n    randomButton.addEventListener('click', () => {\n        window.dispatchEvent(new CustomEvent('randomGraph'));\n        ;\n    });\n}\nconst nodeSize = document.getElementById('nodeSizeElement');\nconst edgeSize = document.getElementById('edgeSizeElement');\nif (edgeSize !== null) {\n    edgeSize.onchange = function () {\n        const event = new CustomEvent('newEdgeSize', { detail: edgeSize.value });\n        window.dispatchEvent(event);\n    };\n}\nif (nodeSize) {\n    nodeSize.onchange = function () {\n        const event = new CustomEvent('newNodeSize', { detail: nodeSize.value });\n        window.dispatchEvent(event);\n    };\n}\nfunction openTab(evt, tabName) {\n    let i;\n    let tabcontent;\n    let tablinks;\n    globalThis.state = tabName;\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\n    for (i = 0; i < tabcontent.length; i++) {\n        tabcontent[i].style.display = \"none\";\n    }\n    tablinks = document.getElementsByClassName(\"tablinks\");\n    for (i = 0; i < tablinks.length; i++) {\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n    const selectedTab = document.getElementById(tabName);\n    if (selectedTab) {\n        selectedTab.style.display = \"block\";\n    }\n    evt.currentTarget.className += \" active\";\n    if (tabName === \"Attributes\") {\n        console.log(\"Changing to attributes, pulling data\");\n        const event = new CustomEvent('getGraphAttributes');\n        window.dispatchEvent(event);\n    }\n}\nwindow.openTab = openTab;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const defaultTab = document.querySelector(\".tablinks\");\n    if (defaultTab) {\n        defaultTab.click();\n    }\n});\nconst sketchContainer = document.getElementById('sketchContainer');\nif (sketchContainer) {\n    (0,_sketch__WEBPACK_IMPORTED_MODULE_1__.createSketch)(sketchContainer);\n}\n\n\n//# sourceURL=webpack:///./src/index.ts?");

/***/ }),

/***/ "./src/sketch.ts":
/*!***********************!*\
  !*** ./src/sketch.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSketch: () => (/* binding */ createSketch)\n/* harmony export */ });\n/* harmony import */ var _graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./graph */ \"./src/graph.ts\");\n/* harmony import */ var _graphNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./graphNode */ \"./src/graphNode.ts\");\n/* harmony import */ var _graphUtilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./graphUtilities */ \"./src/graphUtilities.ts\");\n\n\n\nconst NODE_COUNT = 15;\nconst CONNECTION_COUNT = 12;\nconst GRAVITY_CONST = 0.8;\nconst FORCE_CONSTANT = 1200;\nconst DO_NODE_MOVEMENT = true;\nconst SKETCH_HEIGHT = 640;\nconst SKETCH_WIDTH = 550;\nlet DEFAULT_NODE_SIZE = 3;\nconst LINE_THICKNESS = 2;\nlet MIN_CON_LEN = 200;\nlet MAX_CON_LEN = 400;\nconst DRAG_MODE = \"Drag\";\nconst DRAW_MODE = \"Draw\";\nconst DELETE_MODE = \"Delete\";\nconst CONFIG_MODE = \"Config\";\nconst ATTRIBUTES_MODE = \"Attributes\";\nconst LINE_CLICK_TOLERANCE = 5;\nfunction createSketch(containerId) {\n    const sketch = (s) => {\n        // Initialize graph\n        let graph = new _graph__WEBPACK_IMPORTED_MODULE_0__.Graph();\n        let clicked = false;\n        let selectedNode = null;\n        let nodeCreatedDuringThisClick = false;\n        let NODE_COLOUR = '#FFA500';\n        let BG_COLOUR;\n        let NODE_BORDER_COLOUR;\n        s.setup = () => {\n            // Create canvas\n            s.createCanvas(SKETCH_WIDTH, SKETCH_HEIGHT);\n            BG_COLOUR = adjustColor(NODE_COLOUR, 0.8);\n            NODE_BORDER_COLOUR = adjustColor(NODE_COLOUR, -0.4);\n            // Fill board with some nodes\n            for (let i = 0; i < NODE_COUNT; i++) {\n                const x = s.random(-SKETCH_WIDTH / 4, SKETCH_WIDTH / 4);\n                const y = s.random(-SKETCH_HEIGHT / 4, SKETCH_HEIGHT / 4);\n                const node = new _graphNode__WEBPACK_IMPORTED_MODULE_1__.GraphNode(s.createVector(x, y), DEFAULT_NODE_SIZE);\n                graph.addNode(node);\n            }\n            // Generate sample connections\n            const allNodes = graph.getNodes();\n            for (let n = 0; n < CONNECTION_COUNT; n++) {\n                graph.addEdge(allNodes[Math.round(s.random(NODE_COUNT - 1))], allNodes[Math.round(s.random(NODE_COUNT - 1))], s.random(MIN_CON_LEN, MAX_CON_LEN));\n            }\n            // Set stroke weight\n            s.strokeWeight(LINE_THICKNESS);\n            updateText(graph.toString());\n        };\n        s.draw = () => {\n            // Translate so we can draw at origin\n            s.translate(SKETCH_WIDTH / 2, SKETCH_HEIGHT / 2);\n            // Colour background light orange and set stroke orange\n            s.background(BG_COLOUR);\n            s.stroke(NODE_BORDER_COLOUR);\n            const allNodes = graph.getNodes();\n            // Drag selected node\n            if (clicked) {\n                if (selectedNode) {\n                    switch (globalThis.state) {\n                        case CONFIG_MODE:\n                        case ATTRIBUTES_MODE:\n                        case DRAG_MODE:\n                            selectedNode.pos.x = s.mouseX - SKETCH_WIDTH / 2;\n                            selectedNode.pos.y = s.mouseY - SKETCH_HEIGHT / 2;\n                            break;\n                        case DRAW_MODE:\n                            if (!nodeCreatedDuringThisClick) {\n                                s.line(selectedNode.pos.x, selectedNode.pos.y, s.mouseX - SKETCH_WIDTH / 2, s.mouseY - SKETCH_HEIGHT / 2);\n                                break;\n                            }\n                            selectedNode.pos.x = s.mouseX - SKETCH_WIDTH / 2;\n                            selectedNode.pos.y = s.mouseY - SKETCH_HEIGHT / 2;\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n            // Draw all connections\n            graph.getNodes().forEach((node) => {\n                const neighbours = graph.getNeighbors(node);\n                neighbours.forEach((neighbor) => {\n                    s.line(node.pos.x, node.pos.y, neighbor.pos.x, neighbor.pos.y);\n                });\n            });\n            // Move all nodes\n            adjustForceForNodes(allNodes);\n            // Draw all nodes\n            s.fill(NODE_COLOUR);\n            graph.getNodes().forEach(node => {\n                node.draw(s);\n                if (DO_NODE_MOVEMENT) {\n                    node.update();\n                }\n            });\n        };\n        s.mousePressed = () => {\n            if (s.mouseX > 0 && s.mouseX < SKETCH_WIDTH && s.mouseY > 0 && s.mouseY < SKETCH_HEIGHT) {\n                clicked = true;\n                const mousePos = s.createVector(s.mouseX - s.width / 2, s.mouseY - s.height / 2);\n                switch (globalThis.state) {\n                    case DELETE_MODE:\n                        graph.getNodes().forEach((node) => {\n                            if (s.dist(mousePos.x, mousePos.y, node.pos.x, node.pos.y) <= node.mass / 2) {\n                                selectedNode = node;\n                                return;\n                            }\n                        });\n                        if (selectedNode !== null) {\n                            graph.removeNode(selectedNode);\n                            updateText(graph.toString());\n                            selectedNode = null;\n                        }\n                        graph.getNodes().forEach((node) => {\n                            const neighbours = graph.getNeighbors(node);\n                            neighbours.forEach((neighbor) => {\n                                if (isMouseOnLine(node.pos, neighbor.pos, mousePos)) {\n                                    graph.removeEdge(node, neighbor);\n                                    updateText(graph.toString());\n                                    return;\n                                }\n                            });\n                        });\n                        break;\n                    case DRAW_MODE:\n                    case DRAG_MODE:\n                    case CONFIG_MODE:\n                    case ATTRIBUTES_MODE:\n                    default:\n                        let createNewNode = true;\n                        // Select node we are hovering over\n                        graph.getNodes().forEach((node) => {\n                            if (s.dist(mousePos.x, mousePos.y, node.pos.x, node.pos.y) <= node.mass / 2) {\n                                selectedNode = node;\n                                createNewNode = false;\n                                return;\n                            }\n                        });\n                        // Create new node\n                        if (createNewNode) {\n                            nodeCreatedDuringThisClick = true;\n                            selectedNode = new _graphNode__WEBPACK_IMPORTED_MODULE_1__.GraphNode(s.createVector(s.mouseX - s.width / 2, s.mouseY - s.height / 2), DEFAULT_NODE_SIZE);\n                            graph.addNode(selectedNode);\n                            updateText(graph.toString());\n                        }\n                        break;\n                }\n            }\n        };\n        s.mouseReleased = () => {\n            // On release stop dragging node\n            clicked = false;\n            nodeCreatedDuringThisClick = false;\n            const mousePos = s.createVector(s.mouseX - s.width / 2, s.mouseY - s.height / 2);\n            switch (globalThis.state) {\n                case DRAW_MODE:\n                    graph.getNodes().forEach((node) => {\n                        if (s.dist(mousePos.x, mousePos.y, node.pos.x, node.pos.y) <= node.mass / 2 && selectedNode !== null) {\n                            if (selectedNode !== null) {\n                                graph.addEdge(selectedNode, node, s.random(MIN_CON_LEN, MAX_CON_LEN));\n                                updateText(graph.toString());\n                                return;\n                            }\n                        }\n                    });\n                case DRAG_MODE:\n                case CONFIG_MODE:\n                case ATTRIBUTES_MODE:\n                case DELETE_MODE:\n                default:\n                    break;\n            }\n            selectedNode = null;\n        };\n        const adjustForceForNodes = (nodes) => {\n            // There are 3 components to force:\n            // Bring each node closer to the middle\n            nodes.forEach(node => {\n                const gravity = node.pos.copy().mult(-1).mult(GRAVITY_CONST);\n                node.force = gravity;\n            });\n            // Every node is repelled by every other node\n            for (let i = 0; i < nodes.length; i++) {\n                for (let j = i + 1; j < nodes.length; j++) {\n                    const pos = nodes[i].pos;\n                    const dir = nodes[j].pos.copy().sub(pos);\n                    const force = dir.div(dir.mag() * dir.mag());\n                    force.mult(FORCE_CONSTANT);\n                    nodes[i].force.add(force.copy().mult(-1));\n                    nodes[j].force.add(force);\n                }\n            }\n            // For each connection, add to the force each node feels by the distance from one to the other\n            // Nodes far apart feel a strong force together, nodes close together feel a weak force\n            graph.getNodes().forEach((node) => {\n                const neighbours = graph.getNeighbors(node);\n                neighbours.forEach((neighbor) => {\n                    const dis = node.pos.copy().sub(neighbor.pos);\n                    node.force.sub(dis);\n                    neighbor.force.add(dis);\n                });\n                // const diff = dis.mag() - weight\n                // node.force.sub(dis.mult(diff/dis.mag()))\n                // neighbor.force.sub(dis.mult(diff/dis.mag()))\n            });\n        };\n        function isMouseOnLine(firstPoint, secondPoint, mousePoint) {\n            const d = distToLine(firstPoint, secondPoint, mousePoint);\n            if (d <= LINE_CLICK_TOLERANCE) {\n                const minX = Math.min(firstPoint.x, secondPoint.x);\n                const maxX = Math.max(firstPoint.x, secondPoint.x);\n                const minY = Math.min(firstPoint.y, secondPoint.y);\n                const maxY = Math.max(firstPoint.y, secondPoint.y);\n                if (mousePoint.x >= minX && mousePoint.x <= maxX && mousePoint.y >= minY && mousePoint.y <= maxY) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function updateText(newText) {\n            const event = new CustomEvent('textUpdated', { detail: newText.toString() });\n            window.dispatchEvent(event);\n            if (globalThis.state === ATTRIBUTES_MODE) {\n                sendGraphAttributes();\n            }\n        }\n        function distToLine(firstPoint, secondPoint, mousePoint) {\n            const lineVector = secondPoint.copy().sub(firstPoint);\n            const pointVector = mousePoint.copy().sub(firstPoint);\n            const crossProd = lineVector.cross(pointVector);\n            const crossProdMagnitude = crossProd.mag();\n            const lineMagnitude = lineVector.mag();\n            return crossProdMagnitude / lineMagnitude;\n        }\n        function sendGraphAttributes() {\n            const data = new Map();\n            data.set('IsConnected', (0,_graphUtilities__WEBPACK_IMPORTED_MODULE_2__.isGraphConnected)(graph).toString());\n            data.set('IsComplete', (0,_graphUtilities__WEBPACK_IMPORTED_MODULE_2__.isGraphComplete)(graph).toString());\n            data.set('ShortestCycle', (0,_graphUtilities__WEBPACK_IMPORTED_MODULE_2__.findShortestCycle)(graph).toString());\n            data.set('NodeCount', (0,_graphUtilities__WEBPACK_IMPORTED_MODULE_2__.nodeCount)(graph).toString());\n            data.set('EdgeCount', (0,_graphUtilities__WEBPACK_IMPORTED_MODULE_2__.edgeCount)(graph).toString());\n            console.log(\"Dispatching event with data: \", data);\n            const event = new CustomEvent('sendGraphAttributes', { detail: data });\n            window.dispatchEvent(event);\n        }\n        window.addEventListener('saveImage', function (_) {\n            console.log(\"saving\");\n            s.saveCanvas(\"MyGraph_\" + Date.now(), \"png\");\n        });\n        window.addEventListener('clearGraph', function (_) {\n            graph = new _graph__WEBPACK_IMPORTED_MODULE_0__.Graph();\n        });\n        window.addEventListener('randomGraph', function (_) {\n            graph = new _graph__WEBPACK_IMPORTED_MODULE_0__.Graph();\n            for (let i = 0; i < NODE_COUNT; i++) {\n                const x = s.random(-SKETCH_WIDTH / 4, SKETCH_WIDTH / 4);\n                const y = s.random(-SKETCH_HEIGHT / 4, SKETCH_HEIGHT / 4);\n                const node = new _graphNode__WEBPACK_IMPORTED_MODULE_1__.GraphNode(s.createVector(x, y), DEFAULT_NODE_SIZE);\n                graph.addNode(node);\n            }\n            const allNodes = graph.getNodes();\n            for (let n = 0; n < CONNECTION_COUNT; n++) {\n                graph.addEdge(allNodes[Math.round(s.random(NODE_COUNT - 1))], allNodes[Math.round(s.random(NODE_COUNT - 1))], s.random(MIN_CON_LEN, MAX_CON_LEN));\n            }\n        });\n        window.addEventListener('newNodeSize', function (event) {\n            const customEvent = event;\n            DEFAULT_NODE_SIZE = +customEvent.detail;\n        });\n        window.addEventListener('getGraphAttributes', function (event) {\n            sendGraphAttributes();\n        });\n        window.addEventListener('newEdgeSize', function (event) {\n            const customEvent = event;\n            MAX_CON_LEN = +customEvent.detail;\n            MIN_CON_LEN = +customEvent.detail;\n        });\n        window.addEventListener('colourChanged', function (event) {\n            const customEvent = event;\n            NODE_COLOUR = customEvent.detail;\n            BG_COLOUR = adjustColor(NODE_COLOUR, 0.8);\n            NODE_BORDER_COLOUR = adjustColor(NODE_COLOUR, -0.4);\n        });\n    };\n    // Instantiate sketch\n    new p5(sketch, containerId);\n}\nfunction adjustColor(hex, percent) {\n    hex = hex.replace('#', '');\n    let r = parseInt(hex.substring(0, 2), 16);\n    let g = parseInt(hex.substring(2, 4), 16);\n    let b = parseInt(hex.substring(4, 6), 16);\n    const adjust = (colorValue, percent) => {\n        return percent > 0 ?\n            Math.min(255, colorValue + (255 - colorValue) * percent) :\n            Math.max(0, colorValue + colorValue * percent);\n    };\n    r = adjust(r, percent);\n    g = adjust(g, percent);\n    b = adjust(b, percent);\n    const newHex = `#${Math.round(r).toString(16).padStart(2, '0')}${Math.round(g).toString(16).padStart(2, '0')}${Math.round(b).toString(16).padStart(2, '0')}`;\n    return newHex;\n}\n\n\n//# sourceURL=webpack:///./src/sketch.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;